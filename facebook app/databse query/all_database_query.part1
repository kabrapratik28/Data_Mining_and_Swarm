drop database facebook_database ; 
create database facebook_database ; 
use facebook_database ; 

CREATE TABLE User
(
user_id varchar(50)  ,
name varchar(200),
birthday date,
PRIMARY KEY (user_id)
); 

CREATE TABLE Place
(
place_id varchar(50),
place_name varchar(200),
PRIMARY KEY (place_id)
);


CREATE TABLE Status
(
user_id varchar(50)  ,
status_id varchar(50) , 
status varchar(2500),
place_id varchar(50),
time_stamp timestamp ,
PRIMARY KEY (status_id),
FOREIGN KEY (user_id) REFERENCES User(user_id),
FOREIGN KEY (place_id) REFERENCES Place(place_id) 
);

CREATE TABLE StatusTag
(
status_id varchar(50) , 
user_id varchar(50) ,
PRIMARY KEY (status_id,user_id),
FOREIGN KEY (status_id) REFERENCES Status(status_id)
);

Create Table StatusLike
(
status_id varchar(50) , 
user_id varchar(50) ,
PRIMARY KEY (status_id,user_id),
FOREIGN KEY (status_id) REFERENCES Status(status_id)
);

Create Table StatusComment
(
status_id varchar(50),
status_comment_id varchar(50),
user_id varchar(50),
comment  varchar(200),
like_count int,
time_stamp timestamp,
PRIMARY KEY (status_comment_id),
FOREIGN KEY (status_id) REFERENCES Status(status_id)
);


CREATE Table TaggedPlace
(
tagged_place_id varchar(50),
user_id varchar(50),
place_id varchar(50),
time_stamp timestamp,
PRIMARY KEY (tagged_place_id),
FOREIGN KEY (user_id) REFERENCES User(user_id),
FOREIGN KEY (place_id) REFERENCES Place(place_id)
);

CREATE Table GroupofPeoples  /*DONT GIVE NAME GROUP BZ OF KEYWORD*/
(
group_id varchar(50),
group_name varchar(50),
PRIMARY KEY (group_id)
);

Create Table GroupUser
(
user_id varchar(50),
group_id varchar(50),
PRIMARY KEY (user_id,group_id),
FOREIGN KEY (user_id) REFERENCES User(user_id),
FOREIGN KEY (group_id) REFERENCES GroupofPeoples(group_id)
);

Create Table Photo
(
user_id varchar(50),
photo_id varchar(50),
photo_caption varchar(2500),
place_id varchar(50),
time_stamp timestamp,
PRIMARY KEY  (photo_id),
FOREIGN KEY (user_id) REFERENCES User(user_id),
FOREIGN KEY (place_id) REFERENCES Place(place_id) 
);

Create Table PhotoTag
(
photo_id varchar(50),
user_id varchar(50),
PRIMARY KEY (photo_id,user_id),
FOREIGN KEY (photo_id) REFERENCES Photo(photo_id)
);
 
Create Table PhotoLike
(
photo_id varchar(50),
user_id varchar(50),
PRIMARY KEY (photo_id,user_id),
FOREIGN KEY (photo_id) REFERENCES Photo(photo_id)
);

Create Table PhotoComment
(
photo_id varchar(50),
comment_id varchar(50),
user_id varchar(50),
comment  varchar(200),
like_count int,
time_stamp timestamp,
PRIMARY KEY (comment_id),
FOREIGN KEY (photo_id) REFERENCES Photo(photo_id)
);

Create Table FriendCount
(
user_id varchar(50)  ,
friendcount int,
FOREIGN KEY (user_id) REFERENCES User(user_id),
PRIMARY KEY (user_id)
);

Create Table ProfilePicAndTimeLine
(
user_id varchar(50)  ,
profile_pic_count int,
cover_pic_count int,
FOREIGN KEY (user_id) REFERENCES User(user_id),
PRIMARY KEY (user_id)
);

CREATE VIEW no_of_likes_per_status AS
select User.user_id,count(StatusLike.user_id) as CountStatusLike 
from User 
LEFT OUTER JOIN Status ON User.user_id = Status.user_id
LEFT OUTER JOIN StatusLike ON Status.status_id = StatusLike.status_id
group by Status.status_id ; 

CREATE VIEW avg_likes_per_status AS 
select user_id,avg(CountStatusLike) as avg_no_of_like_per_status 
from no_of_likes_per_status as UserStatus 
group by UserStatus.user_id;

CREATE VIEW no_of_likes_per_photo AS select User.user_id,count(PhotoLike.user_id) as CountPhotoLike from User 
LEFT OUTER JOIN Photo ON User.user_id = Photo.user_id
LEFT OUTER JOIN PhotoLike ON Photo.photo_id = PhotoLike.photo_id
group by Photo.photo_id ;

CREATE VIEW avg_likes_per_photo AS 
select user_id,avg(CountPhotoLike) as avg_no_of_like_per_photo 
from no_of_likes_per_photo as UserPhoto 
group by UserPhoto.user_id;

CREATE VIEW places_people_went_to AS 
(select user_id,place_id from TaggedPlace ) Union (select user_id,place_id from Photo) Union (select user_id,place_id from Status);

CREATE VIEW no_of_place_people_went_to AS 
select user_id, count(place_id) as no_of_place
from places_people_went_to
group by user_id ; 


