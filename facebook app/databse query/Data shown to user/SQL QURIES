SQL QURIES (DATA FOR LAST 5 COMMENT ) 
CREATE VIEW FOR EACH SEPREATLY
=========================================

0.No of Likes for each status
// group by used 
// count used  

mysql> select Name,User.user_id,count(StatusLike.user_id) from User,Status,StatusLike where User.user_id = Status.user_id and Status.status_id = StatusLike.status_id group by Status.status_id;
+--------------+-----------------+---------------------------+
| Name         | user_id         | count(StatusLike.user_id) |
+--------------+-----------------+---------------------------+
| Mohit        | 1234567         |                         1 |
| Pratik Kabra | 644878142260125 |                        74 |
| Pratik Kabra | 644878142260125 |                        31 |
| Pratik Kabra | 644878142260125 |                         8 |
| Pratik Kabra | 644878142260125 |                        41 |
| Pratik Kabra | 644878142260125 |                        16 |
+--------------+-----------------+---------------------------+
6 rows in set (0.00 sec)



===========================================

****1. AVG NO OF LIKES PER STATUS

//select inside select used 
//as for rename used 

//READABLE FORM

select name,user_id,avg(CountStatusLike) as avg_no_of_like_per_status 
from 
		(select Name,User.user_id,count(StatusLike.user_id) as CountStatusLike 
		from User,Status,StatusLike 
		where User.user_id = Status.user_id and Status.status_id = StatusLike.status_id 
		group by Status.status_id)		as UserStatus 
group by UserStatus.user_id;


// WITHOUT SPACES SAME QUERY 

select name,user_id,avg(CountStatusLike) as avg_no_of_like_per_status from (select Name,User.user_id,count(StatusLike.user_id) as CountStatusLike from User,Status,StatusLike where User.user_id = Status.user_id and Status.status_id = StatusLike.status_id group by Status.status_id)as UserStatus group by UserStatus.user_id;

+--------------+-----------------+---------------------------+
| name         | user_id         | avg_no_of_like_per_status |
+--------------+-----------------+---------------------------+
| Mohit        | 1234567         |                    1.0000 |
| Pratik Kabra | 644878142260125 |                   34.0000 |
+--------------+-----------------+---------------------------+
2 rows in set (0.00 sec)

===============================================

**** 2.AVG NO OF LIKES PER PHOTOS


//READBLE FORM 
select name,user_id,avg(CountPhotoLike) as avg_no_of_like_per_photo 
from 
		(select Name,User.user_id,count(PhotoLike.user_id) as CountPhotoLike 
		from User,Photo,PhotoLike 
		where User.user_id = Photo.user_id and Photo.photo_id = PhotoLike.photo_id 
		group by Photo.photo_id)as UserPhoto 
group by UserPhoto.user_id;

//WITHOUT WHITE SPACES 

mysql> select name,user_id,avg(CountPhotoLike) as avg_no_of_like_per_photo from (select Name,User.user_id,count(PhotoLike.user_id) as CountPhotoLike from User,Photo,PhotoLike where User.user_id = Photo.user_id and Photo.photo_id = PhotoLike.photo_id group by Photo.photo_id)as UserPhoto group by UserPhoto.user_id;
+--------------+-----------------+--------------------------+
| name         | user_id         | avg_no_of_like_per_photo |
+--------------+-----------------+--------------------------+
| Pratik Kabra | 644878142260125 |                  75.0000 |
+--------------+-----------------+--------------------------+
1 row in set (0.00 sec)

=================================================

3. NO OF PLACES PEOPLE WENT TO 

mysql> (select user_id,place_id from TaggedPlace ) Union (select user_id,place_id from Photo) Union (select user_id,place_id from Status);
+-----------------+-----------------+
| user_id         | place_id        |
+-----------------+-----------------+
| 644878142260125 | 132920176808611 |
| 644878142260125 | 118499791561356 |
| 644878142260125 | 246078655528591 |
| 644878142260125 | 109527052401717 |
| 644878142260125 |                 |
| 1234567         | 118499791561356 |
| 644878142260125 | 322214504485256 |
| 644878142260125 | 102184499823699 |
| 644878142260125 | 6017214773      |
| 644878142260125 | 118428791504396 |
+-----------------+-----------------+
10 rows in set (0.00 sec)

==================================================

****4. EACH PERSON NO OF PLACES WENT TO(Taken from Tagged Place, Status Place, Photo Place)

//UNION used to gather (userid, placeid)
//Group by used 
//REDABLE FORM

select user_id, count(place_id) as no_of_place_visited  
from ( 
	(select user_id,place_id from TaggedPlace ) 
		Union 
	(select user_id,place_id from Photo) 	
		Union 
	(select user_id,place_id from Status) 
	) as User_Place 
group by User_Place.user_id;


mysql> select user_id, count(place_id) as no_of_place_visited  from ( (select user_id,place_id from TaggedPlace ) Union (select user_id,place_id from Photo) Union (select user_id,place_id from Status) ) as User_Place group by User_Place.user_id;
+-----------------+---------------------+
| user_id         | no_of_place_visited |
+-----------------+---------------------+
| 1234567         |                   1 |
| 644878142260125 |                   9 |
+-----------------+---------------------+
2 rows in set (0.00 sec)

================================================== 

5. STATUSES PER WEEK UPDATE INFO 

//for time interval calculation  ==>    http://www.plumislandmedia.net/mysql/sql-reporting-time-intervals/
//group by 2 things => uid , weekbeging
//order by week 
//FROM_DAYS AND TO_DAYS my sql in built function

//READBLE FORM 

SELECT user_id , COUNT(status_id) AS StatusPerWeek , FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7)) AS week_beginning  

FROM Status  

GROUP BY user_id , FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7)) 

ORDER BY FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7));



mysql> SELECT user_id , COUNT(status_id) AS StatusPerWeek , FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7)) AS week_beginning  FROM Status  GROUP BY user_id , FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7))  ORDER BY FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7));
+-----------------+---------------+----------------+
| user_id         | StatusPerWeek | week_beginning |
+-----------------+---------------+----------------+
| 644878142260125 |             1 | 2013-08-11     |
| 1234567         |             2 | 2013-08-11     |
| 1234567         |             1 | 2013-08-18     |
| 644878142260125 |             1 | 2013-10-27     |
| 644878142260125 |             1 | 2013-11-10     |
| 644878142260125 |             1 | 2013-11-17     |
| 644878142260125 |             1 | 2014-01-05     |
+-----------------+---------------+----------------+
7 rows in set (0.00 sec)

======================================================

****6. AVG NO OF STATUSES PER WEEK 

//SAME ABOVE QUERY GROUP BY USER AND AVG STATUSPERWEEK

//READBLE FORM 
select user_id , AVG(StatusPerWeek) as avg_status_per_week
FROM
		(SELECT user_id , COUNT(status_id) AS StatusPerWeek , FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7)) AS 		week_beginning  
				FROM Status  GROUP BY user_id , FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7))  
				ORDER BY FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7))) 
		as StatusWeek 

group by user_id;


mysql> select user_id , AVG(StatusPerWeek) as avg_status_per_week FROM(SELECT user_id , COUNT(status_id) AS StatusPerWeek , FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7)) AS week_beginning  FROM Status  GROUP BY user_id , FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7))  ORDER BY FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7))) as StatusWeek group by user_id;
+-----------------+---------------------+
| user_id         | avg_status_per_week |
+-----------------+---------------------+
| 1234567         |              1.5000 |
| 644878142260125 |              1.0000 |
+-----------------+---------------------+
2 rows in set (0.00 sec)

========================================================

7.PHOTO WEEK 
 
mysql> SELECT user_id , COUNT(photo_id) AS PhotoPerWeek , FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7)) AS week_beginning  FROM Photo  GROUP BY user_id , FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7))  ORDER BY FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7)) ;
+-----------------+--------------+----------------+
| user_id         | PhotoPerWeek | week_beginning |
+-----------------+--------------+----------------+
| 644878142260125 |            1 | 2014-04-06     |
| 644878142260125 |            2 | 2014-04-20     |
| 644878142260125 |            1 | 2014-06-08     |
| 644878142260125 |            1 | 2014-07-13     |
+-----------------+--------------+----------------+
4 rows in set (0.00 sec)


========================================================

****8. AVG NO OF PHOTHOS PER WEEK

mysql> select user_id , AVG(PhotoPerWeek) as avg_photo_per_week FROM(SELECT user_id , COUNT(photo_id) AS PhotoPerWeek , FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7)) AS week_beginning  FROM Photo  GROUP BY user_id , FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7))  ORDER BY FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7))) as PhotoWeek group by user_id;
+-----------------+--------------------+
| user_id         | avg_photo_per_week |
+-----------------+--------------------+
| 644878142260125 |             1.2500 |
+-----------------+--------------------+
1 row in set (0.00 sec)

========================================================



