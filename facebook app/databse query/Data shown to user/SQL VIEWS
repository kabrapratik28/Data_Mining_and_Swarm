VIEWS 
===================================
0. NO OF STATUS LIKE FOR EACH STATUS 

//READBLE FORM 
CREATE VIEW no_of_likes_per_status AS
	select User.user_id,count(StatusLike.user_id) as CountStatusLike 
		from User,Status,StatusLike 
		where User.user_id = Status.user_id and Status.status_id = StatusLike.status_id 
		group by Status.status_id


//LEFT JOIN QUERY (FOR SPECIFICATIO SEE PHOTO SECTION)
CREATE VIEW no_of_likes_per_status AS
select User.user_id,count(StatusLike.user_id) as CountStatusLike 
from User 
LEFT OUTER JOIN Status ON User.user_id = Status.user_id
LEFT OUTER JOIN StatusLike ON Status.status_id = StatusLike.status_id
group by Status.status_id ; 

//QUERY 
CREATE VIEW no_of_likes_per_status AS select User.user_id,count(StatusLike.user_id) as CountStatusLike from User,Status,StatusLike where User.user_id = Status.user_id and Status.status_id = StatusLike.status_id group by Status.status_id ;

====================================

1. AVG NO OF LIKES PER STATUS

//no_of_likes_per_status VIEW USED

//READABLE FORM

CREATE VIEW avg_likes_per_status AS 
select user_id,avg(CountStatusLike) as avg_no_of_like_per_status 
from no_of_likes_per_status as UserStatus 
group by UserStatus.user_id;


====================================

2.LIKES FOR PHOTOS

// READBLE FORM
CREATE VIEW no_of_likes_per_photo AS
select User.user_id,count(PhotoLike.user_id) as CountPhotoLike 
		from User,Photo,PhotoLike 
		where User.user_id = Photo.user_id and Photo.photo_id = PhotoLike.photo_id 
		group by Photo.photo_id ; 

//WITHOUT SPACE
// DONT USE THIS (NOT A LEFT JOIN )
CREATE VIEW no_of_likes_per_photo AS select User.user_id,count(PhotoLike.user_id) as CountPhotoLike from User,Photo,PhotoLike where User.user_id = Photo.user_id and Photo.photo_id = PhotoLike.photo_id group by Photo.photo_id ;

//LEFT JOIN USE 
CREATE VIEW no_of_likes_per_photo AS
select User.user_id,count(PhotoLike.user_id) as CountPhotoLike 
from User 
LEFT OUTER JOIN Photo ON User.user_id = Photo.user_id
LEFT OUTER JOIN PhotoLike ON Photo.photo_id = PhotoLike.photo_id
group by Photo.photo_id ; 

//WITHOUT SPACE LEFT JOIN
CREATE VIEW no_of_likes_per_photo AS select User.user_id,count(PhotoLike.user_id) as CountPhotoLike from User 
LEFT OUTER JOIN Photo ON User.user_id = Photo.user_id
LEFT OUTER JOIN PhotoLike ON Photo.photo_id = PhotoLike.photo_id
group by Photo.photo_id ; 


WHY LEFT JOIN ???
=> BZ PHOTO NOT GET LIKE NOT CONSIDERD IN AVG IN NORMAL CASE 
=======   EXAMPLE =====================
mysql> select Name,User.user_id,count(PhotoLike.user_id) as CountPhotoLike from User LEFT OUTER JOIN Photo ON User.user_id = Photo.user_id LEFT OUTER JOIN PhotoLike ON Photo.photo_id = PhotoLike.photo_id group by Photo.photo_id ; 
+--------------+-----------------+----------------+
| Name         | user_id         | CountPhotoLike |
+--------------+-----------------+----------------+
| Mohit        | 1234567         |              0 |
| Pratik Kabra | 644878142260125 |              4 |
| Pratik Kabra | 644878142260125 |            167 |
| Pratik Kabra | 644878142260125 |              0 |
| Pratik Kabra | 644878142260125 |             28 |
| Pratik Kabra | 644878142260125 |             89 |
| Pratik Kabra | 644878142260125 |             87 |
+--------------+-----------------+----------------+
7 rows in set (0.00 sec)

mysql> select Name,User.user_id,count(PhotoLike.user_id) as CountPhotoLike from User,Photo,PhotoLike where User.user_id = Photo.user_id and Photo.photo_id = PhotoLike.photo_id group by Photo.photo_id ;
+--------------+-----------------+----------------+
| Name         | user_id         | CountPhotoLike |
+--------------+-----------------+----------------+
| Pratik Kabra | 644878142260125 |              4 |
| Pratik Kabra | 644878142260125 |            167 |
| Pratik Kabra | 644878142260125 |             28 |
| Pratik Kabra | 644878142260125 |             89 |
| Pratik Kabra | 644878142260125 |             87 |
+--------------+-----------------+----------------+
5 rows in set (0.00 sec)
===================== EXAMPLE END ============================


==================================

3.AVG NO OF LIKES PER PHOTO

//READBLE FORM 
CREATE VIEW avg_likes_per_photo AS 
select user_id,avg(CountPhotoLike) as avg_no_of_like_per_photo 
from no_of_likes_per_photo as UserPhoto 
group by UserPhoto.user_id;

===================================

4.PLACES PEOPLE WENT TO

CREATE VIEW places_people_went_to AS 
(select user_id,place_id from TaggedPlace ) Union (select user_id,place_id from Photo) Union (select user_id,place_id from Status);

===================================

5.NO OF PLACES PEOPLE WENT TO 

CREATE VIEW no_of_place_people_went_to AS 
select user_id, count(place_id) as no_of_place
from places_people_went_to
group by user_id ; 

=====================================

6.STATUSES PER WEEK UPDATE INFO 

CREATE VIEW statusweek AS
SELECT user_id , COUNT(status_id) AS StatusPerWeek , FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7)) AS week_beginning  FROM Status  GROUP BY user_id , FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7))  ORDER BY FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7));

=====================================

7. AVG STATUS PER WEEK

CREATE VIEW status_per_week AS
select user_id , AVG(StatusPerWeek) as avg_status_per_week FROM statusweek group by user_id;

======================================

8.Total Status uptil now

CREATE VIEW total_status AS
select user_id , COUNT(StatusPerWeek) as total_no_of_status FROM statusweek group by user_id;

=======================================

9.PHOTO PER WEEK UPDATE INFO

CREATE VIEW photoweek AS
SELECT user_id , COUNT(photo_id) AS PhotoPerWeek , FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7)) AS week_beginning  FROM Photo  GROUP BY user_id , FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7))  ORDER BY FROM_DAYS(TO_DAYS(time_stamp) -MOD(TO_DAYS(time_stamp) -1, 7)) ;

========================================

10.AVG PHOTO PER WEEK

CREATE VIEW photo_per_week AS 
select user_id , AVG(PhotoPerWeek) as avg_photo_per_week FROM photoweek group by user_id;

========================================

11.TOTAL NO OF PHOTOS

CREATE VIEW total_photo AS 
select user_id , COUNT(PhotoPerWeek) as total_no_of_photo FROM photoweek group by user_id;

=========================================

12. WHOLE INFO IN ONE ******************
//COLASE USED WHEN NULL GET RETUEN 0 FOR THAT

CREATE VIEW user_info as
select User.user_id , User.name , COALESCE(avg_no_of_like_per_status,0) AS avg_no_of_like_per_status , COALESCE(avg_no_of_like_per_photo,0) AS avg_no_of_like_per_photo ,COALESCE(no_of_place,0) AS no_of_place , COALESCE(avg_status_per_week,0) AS avg_status_per_week, COALESCE(total_no_of_status,0) AS total_no_of_status ,COALESCE(avg_photo_per_week,0) AS avg_photo_per_week , COALESCE(total_no_of_photo,0) AS total_no_of_photo, COALESCE(friendcount,0) AS friendcount, COALESCE(profile_pic_count,0) AS profile_pic_count ,COALESCE(cover_pic_count,0) AS cover_pic_count

from User 

LEFT OUTER JOIN avg_likes_per_status ON User.user_id = avg_likes_per_status.user_id 
LEFT OUTER JOIN avg_likes_per_photo ON User.user_id = avg_likes_per_photo.user_id 
LEFT OUTER JOIN no_of_place_people_went_to ON User.user_id = no_of_place_people_went_to.user_id 
LEFT OUTER JOIN status_per_week ON User.user_id = status_per_week.user_id 
LEFT OUTER JOIN total_status ON User.user_id = total_status.user_id 
LEFT OUTER JOIN photo_per_week ON User.user_id = photo_per_week.user_id 
LEFT OUTER JOIN total_photo ON User.user_id = total_photo.user_id
LEFT OUTER JOIN ProfilePicAndTimeLine ON User.user_id = ProfilePicAndTimeLine.user_id
LEFT OUTER JOIN FriendCount ON User.user_id = FriendCount.user_id;

============================================
