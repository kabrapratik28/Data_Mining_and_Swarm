drop database facebook_database ; 
create database facebook_database ; 
use facebook_database ; 

CREATE TABLE User
(
user_id varchar(50)  ,
name varchar(200),
birthday date,
PRIMARY KEY (user_id)
); 

CREATE TABLE Place
(
place_id varchar(50),
place_name varchar(200),
PRIMARY KEY (place_id)
);


CREATE TABLE Status
(
user_id varchar(50)  ,
status_id varchar(50) , 
status varchar(2500),
place_id varchar(50),
time_stamp timestamp ,
PRIMARY KEY (status_id),
FOREIGN KEY (user_id) REFERENCES User(user_id),
FOREIGN KEY (place_id) REFERENCES Place(place_id) 
);

CREATE TABLE StatusTag
(
status_id varchar(50) , 
user_id varchar(50) ,
PRIMARY KEY (status_id,user_id),
FOREIGN KEY (status_id) REFERENCES Status(status_id)
);

Create Table StatusLike
(
status_id varchar(50) , 
user_id varchar(50) ,
PRIMARY KEY (status_id,user_id),
FOREIGN KEY (status_id) REFERENCES Status(status_id)
);

Create Table StatusComment
(
status_id varchar(50),
status_comment_id varchar(50),
user_id varchar(50),
comment  varchar(200),
like_count int,
time_stamp timestamp,
PRIMARY KEY (status_comment_id),
FOREIGN KEY (status_id) REFERENCES Status(status_id)
);


CREATE Table TaggedPlace
(
tagged_place_id varchar(50),
user_id varchar(50),
place_id varchar(50),
time_stamp timestamp,
PRIMARY KEY (tagged_place_id),
FOREIGN KEY (user_id) REFERENCES User(user_id),
FOREIGN KEY (place_id) REFERENCES Place(place_id)
);

CREATE Table GroupofPeoples  /*DONT GIVE NAME GROUP BZ OF KEYWORD*/
(
group_id varchar(50),
group_name varchar(50),
PRIMARY KEY (group_id)
);

Create Table GroupUser
(
user_id varchar(50),
group_id varchar(50),
PRIMARY KEY (user_id,group_id),
FOREIGN KEY (user_id) REFERENCES User(user_id),
FOREIGN KEY (group_id) REFERENCES GroupofPeoples(group_id)
);

Create Table Photo
(
user_id varchar(50),
photo_id varchar(50),
photo_caption varchar(2500),
place_id varchar(50),
time_stamp timestamp,
PRIMARY KEY  (photo_id),
FOREIGN KEY (user_id) REFERENCES User(user_id),
FOREIGN KEY (place_id) REFERENCES Place(place_id) 
);

Create Table PhotoTag
(
photo_id varchar(50),
user_id varchar(50),
PRIMARY KEY (photo_id,user_id),
FOREIGN KEY (photo_id) REFERENCES Photo(photo_id)
);
 
Create Table PhotoLike
(
photo_id varchar(50),
user_id varchar(50),
PRIMARY KEY (photo_id,user_id),
FOREIGN KEY (photo_id) REFERENCES Photo(photo_id)
);

Create Table PhotoComment
(
photo_id varchar(50),
comment_id varchar(50),
user_id varchar(50),
comment  varchar(200),
like_count int,
time_stamp timestamp,
PRIMARY KEY (comment_id),
FOREIGN KEY (photo_id) REFERENCES Photo(photo_id)
);

Create Table FriendCount
(
user_id varchar(50)  ,
friendcount int,
FOREIGN KEY (user_id) REFERENCES User(user_id),
PRIMARY KEY (user_id)
);

Create Table FriendConnection
(
user_id varchar(50)  ,
friend_id varchar(50) ,
FOREIGN KEY (user_id) REFERENCES User(user_id),
FOREIGN KEY (friend_id) REFERENCES User(user_id),
PRIMARY KEY (user_id,friend_id)
);

Create Table ProfilePicAndTimeLine
(
user_id varchar(50)  ,
profile_pic_count int,
cover_pic_count int,
FOREIGN KEY (user_id) REFERENCES User(user_id),
PRIMARY KEY (user_id)
);


CREATE TABLE CommunityConnection
(
community_id varchar(5),
user_id varchar(50)  , 
FOREIGN KEY (user_id) REFERENCES User(user_id)
);





CREATE VIEW no_of_likes_per_status AS
select User.user_id,count(StatusLike.user_id) as CountStatusLike 
from User 
LEFT OUTER JOIN Status ON User.user_id = Status.user_id
LEFT OUTER JOIN StatusLike ON Status.status_id = StatusLike.status_id
group by Status.status_id ; 

CREATE VIEW avg_likes_per_status AS 
select user_id,avg(CountStatusLike) as avg_no_of_like_per_status 
from no_of_likes_per_status as UserStatus 
group by UserStatus.user_id;

CREATE VIEW no_of_likes_per_photo AS select User.user_id,count(PhotoLike.user_id) as CountPhotoLike from User 
LEFT OUTER JOIN Photo ON User.user_id = Photo.user_id
LEFT OUTER JOIN PhotoLike ON Photo.photo_id = PhotoLike.photo_id
group by Photo.photo_id ;

CREATE VIEW avg_likes_per_photo AS 
select user_id,avg(CountPhotoLike) as avg_no_of_like_per_photo 
from no_of_likes_per_photo as UserPhoto 
group by UserPhoto.user_id;

CREATE VIEW places_people_went_to AS 
(select user_id,place_id from TaggedPlace ) Union (select user_id,place_id from Photo) Union (select user_id,place_id from Status);

CREATE VIEW no_of_place_people_went_to AS 
select user_id, count(place_id) as no_of_place
from places_people_went_to
group by user_id ; 

/*===========================================================*/

/*Lingustic Features Related Database*/

/*===========================================================*/

CREATE TABLE Linguistic_features
(
status_id varchar(50) ,
WPS double,
UNIQUE_Feature double, /* PLEASE DONT WRITE UNIQUE */
SIXLTR double,
ABBREVIATIONS double,
EMOTICONS double,
QMARKS double,
PERIOD double,
COMMA double,
COLON double,
SEMIC double,
QMARK double,
EXCLAM double,
DASH double,
QUOTE double,
APOSTRO double,
PARENTH double,
OTHERP double,
ALLPCT double,
PRONOUN double,
I double,
WE double,
SELF double,
YOU double,
OTHER double,
NEGATIONS double,
ASSENTS double,
ARTICLES double,
PREPOSITIONS double,
NUMBERS double,
AFFECTIVE_PROCESS double,
POSITIVE_EMOTION double,
POSITIVE_FEELING double,
OPTIMISM double,
NEGATIVE_EMOTION double,
ANXIETY double,
ANGER double,
SADNESS double,
COGNITIVE_PROCESS double,
CAUSATION double,
INSIGHT double,
DISCREPANCY double,
INHIBITION double,
TENTATIVE double,
CERTAINTY double,
SENSORY_PROCESS double,
SEEING double,
HEARING double,
FEELING double,
SOCIAL_PROCESS double,
COMMUNICATION double,
REFERENCE_PEOPLE double,
FRIENDS double,
FAMILY double,
HUMANS double,
TIME double,
PAST double,
PRESENT double,
FUTURE double,
SPACE double,
UP double,
DOWN double,
INCLUSIVE double,
EXCLUSIVE double,
MOTION double,
OCCUPATION double,
SCHOOL double,
JOB_OR_WORK double,
ACHIEVEMENT double,
LEISURE_ACTIVITY double,
HOME double,
SPORTS double,
TV_OR_MOVIE double,
MUSIC double,
MONEY double,
METAPHYSICAL double,
RELIGION double,
DEATH_AND_DYING double,
PHYSICAL_STATES double,
BODY_STATES double,
SEXUALITY double,
EATING double,
SLEEPING double,
GROOMING double,
SWEAR_WORDS double,
NONFLUENCIES double,
FILLERS double,
DIC double,
PRIMARY KEY (status_id),
FOREIGN KEY (status_id) REFERENCES Status(status_id)
); 


/*Status data not not processed that only selected */
/*Write in Java prepared Statement*/
/*
SELECT * 
FROM Status  
WHERE status_id not in (select status_id from Linguistic_features);
*/
/*Insert values to Linguistic_features */
/*
INSERT INTO Linguistic_features
(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
*/

CREATE VIEW LIWC_feature_extraction_of_user AS
select 
 user_id,
 avg(WPS)as AVG_WPS,
 avg(UNIQUE_Feature)as AVG_UNIQUE_Feature, /* PLEASE DONT WRITE UNIQUE */
 avg(SIXLTR)as AVG_SIXLTR,
 avg(ABBREVIATIONS)as AVG_ABBREVIATIONS ,
 avg(EMOTICONS)as AVG_EMOTICONS ,
 avg(QMARKS )as AVG_QMARKS,
 avg(PERIOD)as AVG_PERIOD ,
 avg(COMMA)as AVG_COMMA ,
 avg(COLON)as AVG_COLON ,
 avg(SEMIC )as AVG_SEMIC,
 avg(QMARK)as AVG_QMARK ,
 avg(EXCLAM )as AVG_EXCLAM,
 avg(DASH )as AVG_DASH,
 avg(QUOTE )as AVG_QUOTE,
 avg(APOSTRO)as AVG_APOSTRO ,
 avg(PARENTH)as AVG_PARENTH,
 avg(OTHERP )as AVG_OTHERP,
 avg(ALLPCT)as AVG_ALLPCT ,
 avg(PRONOUN)as AVG_PRONOUN,
 avg(I )as AVG_I,
 avg(WE )as AVG_WE,
 avg(SELF )as AVG_SELF,
 avg(YOU)as AVG_YOU ,
 avg(OTHER )as AVG_OTHER,
 avg(NEGATIONS)as AVG_NEGATIONS ,
 avg(ASSENTS )as AVG_ASSENTS,
 avg(ARTICLES)as AVG_ARTICLES ,
 avg(PREPOSITIONS)as AVG_PREPOSITIONS ,
 avg(NUMBERS)as AVG_NUMBERS ,
 avg(AFFECTIVE_PROCESS)as AVG_AFFECTIVE_PROCESS ,
 avg(POSITIVE_EMOTION )as AVG_POSITIVE_EMOTION,
 avg(POSITIVE_FEELING)as AVG_POSITIVE_FEELING ,
 avg(OPTIMISM )as AVG_OPTIMISM,
 avg(NEGATIVE_EMOTION)as AVG_NEGATIVE_EMOTION ,
 avg(ANXIETY)as AVG_ANXIETY ,
 avg(ANGER)as AVG_ANGER ,
 avg(SADNESS )as AVG_SADNESS,
 avg(COGNITIVE_PROCESS)as AVG_COGNITIVE_PROCESS ,
 avg(CAUSATION)as AVG_CAUSATION ,
 avg(INSIGHT )as AVG_INSIGHT,
 avg(DISCREPANCY)as AVG_DISCREPANCY,
 avg(INHIBITION)as AVG_INHIBITION ,
 avg(TENTATIVE)as AVG_TENTATIVE ,
 avg(CERTAINTY)as AVG_CERTAINTY ,
 avg(SENSORY_PROCESS)as AVG_SENSORY_PROCESS ,
 avg(SEEING)as AVG_SEEING ,
 avg(HEARING)as AVG_HEARING ,
 avg(FEELING)as AVG_FEELING ,
 avg(SOCIAL_PROCESS)as AVG_SOCIAL_PROCESS ,
 avg(COMMUNICATION)as AVG_COMMUNICATION ,
 avg(REFERENCE_PEOPLE)as AVG_REFERENCE_PEOPLE ,
 avg(FRIENDS)as AVG_FRIENDS ,
 avg(FAMILY)as AVG_FAMILY ,
 avg(HUMANS)as AVG_HUMANS ,
 avg(TIME)as AVG_TIME ,
 avg(PAST)as AVG_PAST ,
 avg(PRESENT)as AVG_PRESENT ,
 avg(FUTURE)as AVG_FUTURE ,
 avg(SPACE)as AVG_SPACE ,
 avg(UP)as AVG_UP ,
 avg(DOWN )as AVG_DOWN,
 avg(INCLUSIVE)as AVG_INCLUSIVE ,
 avg(EXCLUSIVE)as AVG_EXCLUSIVE ,
 avg(MOTION)as AVG_MOTION ,
 avg(OCCUPATION)as AVG_OCCUPATION ,
 avg(SCHOOL)as AVG_SCHOOL ,
 avg(JOB_OR_WORK)as AVG_JOB_OR_WORK ,
 avg(ACHIEVEMENT)as AVG_ACHIEVEMENT ,
 avg(LEISURE_ACTIVITY)as AVG_LEISURE_ACTIVITY ,
 avg(HOME)as AVG_HOME ,
 avg(SPORTS)as AVG_SPORTS ,
 avg(TV_OR_MOVIE)as AVG_TV_OR_MOVIE ,
 avg(MUSIC)as AVG_MUSIC ,
 avg(MONEY)as AVG_MONEY ,
 avg(METAPHYSICAL)as AVG_METAPHYSICAL ,
 avg(RELIGION)as AVG_RELIGION ,
 avg(DEATH_AND_DYING)as AVG_DEATH_AND_DYING ,
 avg(PHYSICAL_STATES)as AVG_PHYSICAL_STATES ,
 avg(BODY_STATES)as AVG_BODY_STATES ,
 avg(SEXUALITY)as AVG_SEXUALITY ,
 avg(EATING)as AVG_EATING ,
 avg(SLEEPING )as AVG_SLEEPING,
 avg(GROOMING)as AVG_GROOMING ,
 avg(SWEAR_WORDS )as AVG_SWEAR_WORDS,
 avg(NONFLUENCIES)as AVG_NONFLUENCIES ,
 avg(FILLERS)as AVG_FILLERS ,
 avg(DIC)as AVG_DIC 
from
    Linguistic_features, Status 
where 
    Linguistic_features.status_id = Status.status_id 
group by 
    user_id; 



CREATE VIEW user_all_features AS
select 
 LIWC_feature_extraction_of_user.user_id as user_id,
 avg_no_of_like_per_photo,
 avg_no_of_like_per_status,
 no_of_place,
 avg_photo_per_week,
 avg_status_per_week,
 AVG_WPS,
 AVG_UNIQUE_Feature, /* PLEASE DONT WRITE UNIQUE */
 AVG_SIXLTR,
 AVG_ABBREVIATIONS ,
 AVG_EMOTICONS ,
 AVG_QMARKS,
 AVG_PERIOD ,
 AVG_COMMA ,
 AVG_COLON ,
 AVG_SEMIC,
 AVG_QMARK ,
 AVG_EXCLAM,
 AVG_DASH,
 AVG_QUOTE,
 AVG_APOSTRO ,
 AVG_PARENTH,
 AVG_OTHERP,
 AVG_ALLPCT ,
 AVG_PRONOUN,
 AVG_I,
 AVG_WE,
 AVG_SELF,
 AVG_YOU ,
 AVG_OTHER,
 AVG_NEGATIONS ,
 AVG_ASSENTS,
 AVG_ARTICLES ,
 AVG_PREPOSITIONS ,
 AVG_NUMBERS ,
 AVG_AFFECTIVE_PROCESS ,
 AVG_POSITIVE_EMOTION,
 AVG_POSITIVE_FEELING ,
 AVG_OPTIMISM,
 AVG_NEGATIVE_EMOTION ,
 AVG_ANXIETY ,
 AVG_ANGER ,
 AVG_SADNESS,
 AVG_COGNITIVE_PROCESS ,
 AVG_CAUSATION ,
 AVG_INSIGHT,
 AVG_DISCREPANCY,
 AVG_INHIBITION ,
 AVG_TENTATIVE ,
 AVG_CERTAINTY ,
 AVG_SENSORY_PROCESS ,
 AVG_SEEING ,
 AVG_HEARING ,
 AVG_FEELING ,
 AVG_SOCIAL_PROCESS ,
 AVG_COMMUNICATION ,
 AVG_REFERENCE_PEOPLE ,
 AVG_FRIENDS ,
 AVG_FAMILY ,
 AVG_HUMANS ,
 AVG_TIME ,
 AVG_PAST ,
 AVG_PRESENT ,
 AVG_FUTURE ,
 AVG_SPACE ,
 AVG_UP ,
 AVG_DOWN,
 AVG_INCLUSIVE ,
 AVG_EXCLUSIVE ,
 AVG_MOTION ,
 AVG_OCCUPATION ,
 AVG_SCHOOL ,
 AVG_JOB_OR_WORK ,
 AVG_ACHIEVEMENT ,
 AVG_LEISURE_ACTIVITY ,
 AVG_HOME ,
 AVG_SPORTS ,
 AVG_TV_OR_MOVIE ,
 AVG_MUSIC ,
 AVG_MONEY ,
 AVG_METAPHYSICAL ,
 AVG_RELIGION ,
 AVG_DEATH_AND_DYING ,
 AVG_PHYSICAL_STATES ,
 AVG_BODY_STATES ,
 AVG_SEXUALITY ,
 AVG_EATING ,
 AVG_SLEEPING,
 AVG_GROOMING ,
 AVG_SWEAR_WORDS,
 AVG_NONFLUENCIES ,
 AVG_FILLERS ,
 AVG_DIC 
from
    LIWC_feature_extraction_of_user, avg_likes_per_photo, avg_likes_per_status, no_of_place_people_went_to, photo_per_week, status_per_week
where 
    LIWC_feature_extraction_of_user.user_id = avg_likes_per_photo.user_id
    and  LIWC_feature_extraction_of_user.user_id = avg_likes_per_status.user_id 
    and  LIWC_feature_extraction_of_user.user_id =  no_of_place_people_went_to.user_id 
    and  LIWC_feature_extraction_of_user.user_id =  photo_per_week.user_id 
    and  LIWC_feature_extraction_of_user.user_id = status_per_week.user_id
    

CREATE TABLE ClusterandUser
(
cluster_id varchar(5),
user_id varchar(50)  , 
FOREIGN KEY (user_id) REFERENCES User(user_id)
);



CREATE VIEW MAX_user_all_features AS
select 
MAX( avg_no_of_like_per_photo) as MAX_no_of_like_per_photo,
MAX( avg_no_of_like_per_status) as MAX_no_of_like_per_status,
MAX( no_of_place) as MAX_no_of_place,
MAX( avg_photo_per_week) as MAX_photo_per_week,
MAX( avg_status_per_week) as MAX_status_per_week,
MAX(AVG_WPS) as MAX_WPS,
MAX(AVG_UNIQUE_Feature) as MAX_UNIQUE_Feature,
MAX(AVG_SIXLTR) as MAX_SIXLTR,
MAX(AVG_ABBREVIATIONS) as MAX_ABBREVIATIONS,
MAX(AVG_EMOTICONS) as MAX_EMOTICONS,
MAX(AVG_QMARKS) as MAX_QMARKS,
MAX(AVG_PERIOD) as MAX_PERIOD,
MAX(AVG_COMMA) as MAX_COMMA,
MAX(AVG_COLON) as MAX_COLON,
MAX(AVG_SEMIC) as MAX_SEMIC,
MAX(AVG_QMARK) as MAX_QMARK,
MAX(AVG_EXCLAM) as MAX_EXCLAM,
MAX(AVG_DASH) as MAX_DASH,
MAX(AVG_QUOTE) as MAX_QUOTE,
MAX(AVG_APOSTRO) as MAX_APOSTRO,
MAX(AVG_PARENTH) as MAX_PARENTH,
MAX(AVG_OTHERP) as MAX_OTHERP,
MAX(AVG_ALLPCT) as MAX_ALLPCT,
MAX(AVG_PRONOUN) as MAX_PRONOUN,
MAX(AVG_I) as MAX_I,
MAX(AVG_WE) as MAX_WE,
MAX(AVG_SELF) as MAX_SELF,
MAX(AVG_YOU) as MAX_YOU,
MAX(AVG_OTHER) as MAX_OTHER,
MAX(AVG_NEGATIONS) as MAX_NEGATIONS,
MAX(AVG_ASSENTS) as MAX_ASSENTS,
MAX(AVG_ARTICLES) as MAX_ARTICLES,
MAX(AVG_PREPOSITIONS) as MAX_PREPOSITIONS,
MAX(AVG_NUMBERS) as MAX_NUMBERS,
MAX(AVG_AFFECTIVE_PROCESS) as MAX_AFFECTIVE_PROCESS,
MAX(AVG_POSITIVE_EMOTION) as MAX_POSITIVE_EMOTION,
MAX(AVG_POSITIVE_FEELING) as MAX_POSITIVE_FEELING,
MAX(AVG_OPTIMISM) as MAX_OPTIMISM,
MAX(AVG_NEGATIVE_EMOTION) as MAX_NEGATIVE_EMOTION,
MAX(AVG_ANXIETY) as MAX_ANXIETY,
MAX(AVG_ANGER) as MAX_ANGER,
MAX(AVG_SADNESS) as MAX_SADNESS,
MAX(AVG_COGNITIVE_PROCESS) as MAX_COGNITIVE_PROCESS,
MAX(AVG_CAUSATION) as MAX_CAUSATION,
MAX(AVG_INSIGHT) as MAX_INSIGHT,
MAX(AVG_DISCREPANCY) as MAX_DISCREPANCY,
MAX(AVG_INHIBITION) as MAX_INHIBITION,
MAX(AVG_TENTATIVE) as MAX_TENTATIVE,
MAX(AVG_CERTAINTY) as MAX_CERTAINTY,
MAX(AVG_SENSORY_PROCESS) as MAX_SENSORY_PROCESS,
MAX(AVG_SEEING) as MAX_SEEING,
MAX(AVG_HEARING) as MAX_HEARING,
MAX(AVG_FEELING) as MAX_FEELING,
MAX(AVG_SOCIAL_PROCESS) as MAX_SOCIAL_PROCESS,
MAX(AVG_COMMUNICATION) as MAX_COMMUNICATION,
MAX(AVG_REFERENCE_PEOPLE) as MAX_REFERENCE_PEOPLE,
MAX(AVG_FRIENDS) as MAX_FRIENDS,
MAX(AVG_FAMILY) as MAX_FAMILY,
MAX(AVG_HUMANS) as MAX_HUMANS,
MAX(AVG_TIME) as MAX_TIME,
MAX(AVG_PAST) as MAX_PAST,
MAX(AVG_PRESENT) as MAX_PRESENT,
MAX(AVG_FUTURE) as MAX_FUTURE,
MAX(AVG_SPACE) as MAX_SPACE,
MAX(AVG_UP) as MAX_UP,
MAX(AVG_DOWN) as MAX_DOWN,
MAX(AVG_INCLUSIVE) as MAX_INCLUSIVE,
MAX(AVG_EXCLUSIVE) as MAX_EXCLUSIVE,
MAX(AVG_MOTION) as MAX_MOTION,
MAX(AVG_OCCUPATION) as MAX_OCCUPATION,
MAX(AVG_SCHOOL) as MAX_SCHOOL,
MAX(AVG_JOB_OR_WORK) as MAX_JOB_OR_WORK,
MAX(AVG_ACHIEVEMENT) as MAX_ACHIEVEMENT,
MAX(AVG_LEISURE_ACTIVITY) as MAX_LEISURE_ACTIVITY,
MAX(AVG_HOME) as MAX_HOME,
MAX(AVG_SPORTS) as MAX_SPORTS,
MAX(AVG_TV_OR_MOVIE) as MAX_TV_OR_MOVIE,
MAX(AVG_MUSIC) as MAX_MUSIC,
MAX(AVG_MONEY) as MAX_MONEY,
MAX(AVG_METAPHYSICAL) as MAX_METAPHYSICAL,
MAX(AVG_RELIGION) as MAX_RELIGION,
MAX(AVG_DEATH_AND_DYING) as MAX_DEATH_AND_DYING,
MAX(AVG_PHYSICAL_STATES) as MAX_PHYSICAL_STATES,
MAX(AVG_BODY_STATES) as MAX_BODY_STATES,
MAX(AVG_SEXUALITY) as MAX_SEXUALITY,
MAX(AVG_EATING) as MAX_EATING,
MAX(AVG_SLEEPING) as MAX_SLEEPING,
MAX(AVG_GROOMING) as MAX_GROOMING,
MAX(AVG_SWEAR_WORDS) as MAX_SWEAR_WORDS,
MAX(AVG_NONFLUENCIES) as MAX_NONFLUENCIES,
MAX(AVG_FILLERS) as MAX_FILLERS,
MAX(AVG_DIC) as MAX_DIC
from user_all_features;


CREATE VIEW MIN_user_all_features AS
select 
MIN( avg_no_of_like_per_photo) as MIN_no_of_like_per_photo,
MIN( avg_no_of_like_per_status) as MIN_no_of_like_per_status,
MIN( no_of_place) as MIN_no_of_place,
MIN( avg_photo_per_week) as MIN_photo_per_week,
MIN( avg_status_per_week) as MIN_status_per_week,
MIN(AVG_WPS) as MIN_WPS,
MIN(AVG_UNIQUE_Feature) as MIN_UNIQUE_Feature,
MIN(AVG_SIXLTR) as MIN_SIXLTR,
MIN(AVG_ABBREVIATIONS) as MIN_ABBREVIATIONS,
MIN(AVG_EMOTICONS) as MIN_EMOTICONS,
MIN(AVG_QMARKS) as MIN_QMARKS,
MIN(AVG_PERIOD) as MIN_PERIOD,
MIN(AVG_COMMA) as MIN_COMMA,
MIN(AVG_COLON) as MIN_COLON,
MIN(AVG_SEMIC) as MIN_SEMIC,
MIN(AVG_QMARK) as MIN_QMARK,
MIN(AVG_EXCLAM) as MIN_EXCLAM,
MIN(AVG_DASH) as MIN_DASH,
MIN(AVG_QUOTE) as MIN_QUOTE,
MIN(AVG_APOSTRO) as MIN_APOSTRO,
MIN(AVG_PARENTH) as MIN_PARENTH,
MIN(AVG_OTHERP) as MIN_OTHERP,
MIN(AVG_ALLPCT) as MIN_ALLPCT,
MIN(AVG_PRONOUN) as MIN_PRONOUN,
MIN(AVG_I) as MIN_I,
MIN(AVG_WE) as MIN_WE,
MIN(AVG_SELF) as MIN_SELF,
MIN(AVG_YOU) as MIN_YOU,
MIN(AVG_OTHER) as MIN_OTHER,
MIN(AVG_NEGATIONS) as MIN_NEGATIONS,
MIN(AVG_ASSENTS) as MIN_ASSENTS,
MIN(AVG_ARTICLES) as MIN_ARTICLES,
MIN(AVG_PREPOSITIONS) as MIN_PREPOSITIONS,
MIN(AVG_NUMBERS) as MIN_NUMBERS,
MIN(AVG_AFFECTIVE_PROCESS) as MIN_AFFECTIVE_PROCESS,
MIN(AVG_POSITIVE_EMOTION) as MIN_POSITIVE_EMOTION,
MIN(AVG_POSITIVE_FEELING) as MIN_POSITIVE_FEELING,
MIN(AVG_OPTIMISM) as MIN_OPTIMISM,
MIN(AVG_NEGATIVE_EMOTION) as MIN_NEGATIVE_EMOTION,
MIN(AVG_ANXIETY) as MIN_ANXIETY,
MIN(AVG_ANGER) as MIN_ANGER,
MIN(AVG_SADNESS) as MIN_SADNESS,
MIN(AVG_COGNITIVE_PROCESS) as MIN_COGNITIVE_PROCESS,
MIN(AVG_CAUSATION) as MIN_CAUSATION,
MIN(AVG_INSIGHT) as MIN_INSIGHT,
MIN(AVG_DISCREPANCY) as MIN_DISCREPANCY,
MIN(AVG_INHIBITION) as MIN_INHIBITION,
MIN(AVG_TENTATIVE) as MIN_TENTATIVE,
MIN(AVG_CERTAINTY) as MIN_CERTAINTY,
MIN(AVG_SENSORY_PROCESS) as MIN_SENSORY_PROCESS,
MIN(AVG_SEEING) as MIN_SEEING,
MIN(AVG_HEARING) as MIN_HEARING,
MIN(AVG_FEELING) as MIN_FEELING,
MIN(AVG_SOCIAL_PROCESS) as MIN_SOCIAL_PROCESS,
MIN(AVG_COMMUNICATION) as MIN_COMMUNICATION,
MIN(AVG_REFERENCE_PEOPLE) as MIN_REFERENCE_PEOPLE,
MIN(AVG_FRIENDS) as MIN_FRIENDS,
MIN(AVG_FAMILY) as MIN_FAMILY,
MIN(AVG_HUMANS) as MIN_HUMANS,
MIN(AVG_TIME) as MIN_TIME,
MIN(AVG_PAST) as MIN_PAST,
MIN(AVG_PRESENT) as MIN_PRESENT,
MIN(AVG_FUTURE) as MIN_FUTURE,
MIN(AVG_SPACE) as MIN_SPACE,
MIN(AVG_UP) as MIN_UP,
MIN(AVG_DOWN) as MIN_DOWN,
MIN(AVG_INCLUSIVE) as MIN_INCLUSIVE,
MIN(AVG_EXCLUSIVE) as MIN_EXCLUSIVE,
MIN(AVG_MOTION) as MIN_MOTION,
MIN(AVG_OCCUPATION) as MIN_OCCUPATION,
MIN(AVG_SCHOOL) as MIN_SCHOOL,
MIN(AVG_JOB_OR_WORK) as MIN_JOB_OR_WORK,
MIN(AVG_ACHIEVEMENT) as MIN_ACHIEVEMENT,
MIN(AVG_LEISURE_ACTIVITY) as MIN_LEISURE_ACTIVITY,
MIN(AVG_HOME) as MIN_HOME,
MIN(AVG_SPORTS) as MIN_SPORTS,
MIN(AVG_TV_OR_MOVIE) as MIN_TV_OR_MOVIE,
MIN(AVG_MUSIC) as MIN_MUSIC,
MIN(AVG_MONEY) as MIN_MONEY,
MIN(AVG_METAPHYSICAL) as MIN_METAPHYSICAL,
MIN(AVG_RELIGION) as MIN_RELIGION,
MIN(AVG_DEATH_AND_DYING) as MIN_DEATH_AND_DYING,
MIN(AVG_PHYSICAL_STATES) as MIN_PHYSICAL_STATES,
MIN(AVG_BODY_STATES) as MIN_BODY_STATES,
MIN(AVG_SEXUALITY) as MIN_SEXUALITY,
MIN(AVG_EATING) as MIN_EATING,
MIN(AVG_SLEEPING) as MIN_SLEEPING,
MIN(AVG_GROOMING) as MIN_GROOMING,
MIN(AVG_SWEAR_WORDS) as MIN_SWEAR_WORDS,
MIN(AVG_NONFLUENCIES) as MIN_NONFLUENCIES,
MIN(AVG_FILLERS) as MIN_FILLERS,
MIN(AVG_DIC) as MIN_DIC
from user_all_features;


