package graph_clustering;

import java.util.Vector;

public class dissimilarity_i_j_node {
	//set eigen values and eigen vectors
	Vector<Float> eigen_values ; 
	Vector< Vector<Float> > eigen_vector ;
	
	//first selected (no of centroids -1) eigen value and eigen vector  are sended
	public dissimilarity_i_j_node(Vector<Float> eigen_values, Vector< Vector<Float> > eigen_vector)
	{
		if (eigen_values.size() != eigen_vector.size())
		{
			System.out.println("Error : eigen Value and eigen Vector size are not same. ");
		}
		else 
		{
			this.eigen_values = eigen_values ;
			this.eigen_vector = eigen_vector ;
		}
	}
	
	//return nodes which are closer to each other in graph matrix 
	// order mentened as eigen vector of respective
	public Vector< Vector<Float> > community_find_out_of_given_centroid(Vector< Vector<Float> > centroids_in_graph)
	{
		Vector< Vector<Float> > communities = new Vector<Vector<Float> >();
		
		return communities ; 
	}
	
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
