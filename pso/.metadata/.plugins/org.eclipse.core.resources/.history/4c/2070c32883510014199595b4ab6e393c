package graph_clustering;

import java.util.Vector;

import swarm.particle;
import swarm.swarm_based_clustering;

public class graph_particle {
	
	Vector< Float > current_location ;  // now current velocity
	Vector< Float > current_velocity ;  // now current velocity
	
	float pbest ;  
	Vector< Float > pbest_position ;  // all dimension value for pbest value
	
	/*
	 * set after all particle value calculated
	 * initialization after all particle calculated
	 */
	static float gbest ; 
	static Vector< Float > gbest_position ;  
	
	
	//When object initializes position and velocity initial values set 
	public graph_particle(Vector< Float > intial_values ,Vector< Float > intial_velocities  )
	{
		current_location = new Vector<Float>();
		this.copy_vector_inside_vector(intial_values, current_location);
		
		current_velocity = new Vector< Float > ();
		this.copy_vector_inside_vector(intial_velocities, current_velocity) ; 
		
		/*
		 * set pbest
		 */
		pbest_position = new Vector<Vector<Float> > (); //copy same dimension to pbest_position bz its for first time
		particle.copy_vector_inside_vector(current_location, pbest_position);
		
		swarm_based_clustering particle_cluster = new swarm_based_clustering(current_location);
		pbest = particle_cluster.get_quantization_error_value();
	}
	
	
	
	
	
	//taken from swarm.particle last function in same project another package
	public static void copy_vector_inside_vector(Vector<Float> src_vec ,Vector<Float> des_vec )
	{
			for(int count_dime=0 ; count_dime < src_vec.size() ; count_dime++)
			{
				des_vec.add(src_vec.get(count_dime));
			}
	}
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
	}

}
