package graph_clustering;

import java.util.Map;
import java.util.TreeMap;
import java.util.Vector;

public class graphdata {
	
	Vector<Vector<Float>> nodes_linkage_graph ; 
    Vector<Float> eigen_value ; 
    Vector<Vector<Float>> eigen_vector ; 
	
    Vector<Float> sorted_eigen_value ; 
    Vector<Vector<Float>> sorted_eigen_vector ;
    
	public graphdata()
	{
		
	}
	
	public void extract_positive_eigen_value_and_related_vector()
	{
		
	}
	
	public void same_centroids_elimination()
	{
		
	}
	
	public void set_nearest_node_as_centroids()
	{
		
	}
	
	
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	    Map<Float,String> mySortedMap = new TreeMap<Float,String>();
	    // Put some values in it
	    mySortedMap.put(-2.0f,"One");
	    mySortedMap.put(0.01f,"Zero");
	    mySortedMap.put(.9f,"Three");

	    // Iterate through it and it'll be in order!
	    for(Map.Entry<Float,String> entry : mySortedMap.entrySet()) {
	        System.out.println(entry.getValue());
	    } 
		
	}

}
